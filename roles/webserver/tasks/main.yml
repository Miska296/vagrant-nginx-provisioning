- name: Create user webapp
  user:
    name: webapp
    shell: /bin/bash
    state: present

- name: Create web root directory
  file:
    path: /opt/static-sites
    state: directory
    owner: webapp
    group: webapp
    mode: '0755'

- name: Install NGINX
  apt:
    name: nginx
    state: present
    update_cache: yes

- name: Ensure NGINX is running
  service:
    name: nginx
    state: started
    enabled: true

- name: Deploy custom NGINX config
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/sites-available/default
  notify: restart nginx

- name: Deploy main NGINX config (runs as webapp)
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  notify: restart nginx

- name: Validate HTTP response from web server
  uri:
    url: http://localhost
    return_content: yes
    status_code: 200
  register: http_response

- name: Check if web server is reachable
  uri:
    url: http://localhost
  register: http_response

- name: Fail if server did not respond with status 200
  fail:
    msg: "Web server did not respond with 200 OK!"
  when: http_response.status != 200

- name: Remove existing static-sites folder before cloning
  file:
    path: /opt/static-sites
    state: absent

- name: Clone static site from GitHub
  git:
    repo: 'https://github.com/Miska296/static-web-test.git'
    dest: /opt/static-sites
    version: main
    force: yes

- name: Copy index.html
  template:
    src: index.html.j2
    dest: /opt/static-sites/index.html
  notify: restart nginx

- name: Debug index.html content
  command: cat /opt/static-sites/index.html
  register: index_content

- name: Show index.html content
  debug:
    var: index_content.stdout

- name: Set ownership of index.html
  file:
    path: /opt/static-sites/index.html
    owner: webapp
    group: webapp
    mode: '0644'
  notify: restart nginx
